// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/files/files.proto

package files

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FileReq struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileReq) Reset()         { *m = FileReq{} }
func (m *FileReq) String() string { return proto.CompactTextString(m) }
func (*FileReq) ProtoMessage()    {}
func (*FileReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_09a996b583fbc301, []int{0}
}

func (m *FileReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileReq.Unmarshal(m, b)
}
func (m *FileReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileReq.Marshal(b, m, deterministic)
}
func (m *FileReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileReq.Merge(m, src)
}
func (m *FileReq) XXX_Size() int {
	return xxx_messageInfo_FileReq.Size(m)
}
func (m *FileReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FileReq.DiscardUnknown(m)
}

var xxx_messageInfo_FileReq proto.InternalMessageInfo

func (m *FileReq) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type FileResp struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Location             string   `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileResp) Reset()         { *m = FileResp{} }
func (m *FileResp) String() string { return proto.CompactTextString(m) }
func (*FileResp) ProtoMessage()    {}
func (*FileResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_09a996b583fbc301, []int{1}
}

func (m *FileResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileResp.Unmarshal(m, b)
}
func (m *FileResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileResp.Marshal(b, m, deterministic)
}
func (m *FileResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileResp.Merge(m, src)
}
func (m *FileResp) XXX_Size() int {
	return xxx_messageInfo_FileResp.Size(m)
}
func (m *FileResp) XXX_DiscardUnknown() {
	xxx_messageInfo_FileResp.DiscardUnknown(m)
}

var xxx_messageInfo_FileResp proto.InternalMessageInfo

func (m *FileResp) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FileResp) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

type BinaryFileResp struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Size                 int64    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	ContentType          string   `protobuf:"bytes,3,opt,name=contentType,proto3" json:"contentType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BinaryFileResp) Reset()         { *m = BinaryFileResp{} }
func (m *BinaryFileResp) String() string { return proto.CompactTextString(m) }
func (*BinaryFileResp) ProtoMessage()    {}
func (*BinaryFileResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_09a996b583fbc301, []int{2}
}

func (m *BinaryFileResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinaryFileResp.Unmarshal(m, b)
}
func (m *BinaryFileResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinaryFileResp.Marshal(b, m, deterministic)
}
func (m *BinaryFileResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinaryFileResp.Merge(m, src)
}
func (m *BinaryFileResp) XXX_Size() int {
	return xxx_messageInfo_BinaryFileResp.Size(m)
}
func (m *BinaryFileResp) XXX_DiscardUnknown() {
	xxx_messageInfo_BinaryFileResp.DiscardUnknown(m)
}

var xxx_messageInfo_BinaryFileResp proto.InternalMessageInfo

func (m *BinaryFileResp) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *BinaryFileResp) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *BinaryFileResp) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

type UserHasFilesReq struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ExcludeCategories    []string `protobuf:"bytes,2,rep,name=excludeCategories,proto3" json:"excludeCategories,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserHasFilesReq) Reset()         { *m = UserHasFilesReq{} }
func (m *UserHasFilesReq) String() string { return proto.CompactTextString(m) }
func (*UserHasFilesReq) ProtoMessage()    {}
func (*UserHasFilesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_09a996b583fbc301, []int{3}
}

func (m *UserHasFilesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserHasFilesReq.Unmarshal(m, b)
}
func (m *UserHasFilesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserHasFilesReq.Marshal(b, m, deterministic)
}
func (m *UserHasFilesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserHasFilesReq.Merge(m, src)
}
func (m *UserHasFilesReq) XXX_Size() int {
	return xxx_messageInfo_UserHasFilesReq.Size(m)
}
func (m *UserHasFilesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserHasFilesReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserHasFilesReq proto.InternalMessageInfo

func (m *UserHasFilesReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *UserHasFilesReq) GetExcludeCategories() []string {
	if m != nil {
		return m.ExcludeCategories
	}
	return nil
}

type UserHasFilesResp struct {
	FilesExist           bool     `protobuf:"varint,1,opt,name=filesExist,proto3" json:"filesExist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserHasFilesResp) Reset()         { *m = UserHasFilesResp{} }
func (m *UserHasFilesResp) String() string { return proto.CompactTextString(m) }
func (*UserHasFilesResp) ProtoMessage()    {}
func (*UserHasFilesResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_09a996b583fbc301, []int{4}
}

func (m *UserHasFilesResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserHasFilesResp.Unmarshal(m, b)
}
func (m *UserHasFilesResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserHasFilesResp.Marshal(b, m, deterministic)
}
func (m *UserHasFilesResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserHasFilesResp.Merge(m, src)
}
func (m *UserHasFilesResp) XXX_Size() int {
	return xxx_messageInfo_UserHasFilesResp.Size(m)
}
func (m *UserHasFilesResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UserHasFilesResp.DiscardUnknown(m)
}

var xxx_messageInfo_UserHasFilesResp proto.InternalMessageInfo

func (m *UserHasFilesResp) GetFilesExist() bool {
	if m != nil {
		return m.FilesExist
	}
	return false
}

type UploadFileReq struct {
	Bytes                []byte   `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	FileName             string   `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Uid                  string   `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid,omitempty"`
	AdminOnly            bool     `protobuf:"varint,4,opt,name=adminOnly,proto3" json:"adminOnly,omitempty"`
	Private              bool     `protobuf:"varint,5,opt,name=private,proto3" json:"private,omitempty"`
	Category             string   `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadFileReq) Reset()         { *m = UploadFileReq{} }
func (m *UploadFileReq) String() string { return proto.CompactTextString(m) }
func (*UploadFileReq) ProtoMessage()    {}
func (*UploadFileReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_09a996b583fbc301, []int{5}
}

func (m *UploadFileReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadFileReq.Unmarshal(m, b)
}
func (m *UploadFileReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadFileReq.Marshal(b, m, deterministic)
}
func (m *UploadFileReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadFileReq.Merge(m, src)
}
func (m *UploadFileReq) XXX_Size() int {
	return xxx_messageInfo_UploadFileReq.Size(m)
}
func (m *UploadFileReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadFileReq.DiscardUnknown(m)
}

var xxx_messageInfo_UploadFileReq proto.InternalMessageInfo

func (m *UploadFileReq) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

func (m *UploadFileReq) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *UploadFileReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *UploadFileReq) GetAdminOnly() bool {
	if m != nil {
		return m.AdminOnly
	}
	return false
}

func (m *UploadFileReq) GetPrivate() bool {
	if m != nil {
		return m.Private
	}
	return false
}

func (m *UploadFileReq) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

type UploadFileResp struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Location             string   `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadFileResp) Reset()         { *m = UploadFileResp{} }
func (m *UploadFileResp) String() string { return proto.CompactTextString(m) }
func (*UploadFileResp) ProtoMessage()    {}
func (*UploadFileResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_09a996b583fbc301, []int{6}
}

func (m *UploadFileResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadFileResp.Unmarshal(m, b)
}
func (m *UploadFileResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadFileResp.Marshal(b, m, deterministic)
}
func (m *UploadFileResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadFileResp.Merge(m, src)
}
func (m *UploadFileResp) XXX_Size() int {
	return xxx_messageInfo_UploadFileResp.Size(m)
}
func (m *UploadFileResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadFileResp.DiscardUnknown(m)
}

var xxx_messageInfo_UploadFileResp proto.InternalMessageInfo

func (m *UploadFileResp) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UploadFileResp) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func init() {
	proto.RegisterType((*FileReq)(nil), "velmie.wallet.files.FileReq")
	proto.RegisterType((*FileResp)(nil), "velmie.wallet.files.FileResp")
	proto.RegisterType((*BinaryFileResp)(nil), "velmie.wallet.files.BinaryFileResp")
	proto.RegisterType((*UserHasFilesReq)(nil), "velmie.wallet.files.UserHasFilesReq")
	proto.RegisterType((*UserHasFilesResp)(nil), "velmie.wallet.files.UserHasFilesResp")
	proto.RegisterType((*UploadFileReq)(nil), "velmie.wallet.files.UploadFileReq")
	proto.RegisterType((*UploadFileResp)(nil), "velmie.wallet.files.UploadFileResp")
}

func init() {
	proto.RegisterFile("rpc/files/files.proto", fileDescriptor_09a996b583fbc301)
}

var fileDescriptor_09a996b583fbc301 = []byte{
	// 432 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x53, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0x55, 0x9b, 0x76, 0xd3, 0x0e, 0xa1, 0x2c, 0x06, 0xa4, 0x50, 0x2d, 0x68, 0x65, 0x40, 0xe2,
	0x80, 0x82, 0xb4, 0x48, 0x9c, 0x38, 0x2d, 0xb0, 0x70, 0x02, 0x35, 0xd0, 0x4b, 0x39, 0xb9, 0xc9,
	0x80, 0x2c, 0xb9, 0x71, 0x88, 0xdd, 0x8f, 0xf0, 0x87, 0xf8, 0x55, 0xfc, 0x17, 0x6c, 0xa7, 0x69,
	0xd3, 0x12, 0xbe, 0x2e, 0xd5, 0xcc, 0xbc, 0xce, 0x9b, 0xe7, 0x37, 0x13, 0xb8, 0x53, 0xe4, 0xc9,
	0xd3, 0xcf, 0x5c, 0xa0, 0xaa, 0x7e, 0xa3, 0xbc, 0x90, 0x5a, 0x92, 0x5b, 0x2b, 0x14, 0x0b, 0x8e,
	0xd1, 0x9a, 0x09, 0x81, 0x3a, 0x72, 0x10, 0xbd, 0x0b, 0xfe, 0x95, 0x09, 0x62, 0xfc, 0x4a, 0x46,
	0xd0, 0xe5, 0x69, 0xd8, 0x39, 0xef, 0x3c, 0xee, 0xc5, 0x26, 0xa2, 0xcf, 0x61, 0x50, 0x41, 0x2a,
	0x3f, 0xc6, 0xc8, 0x18, 0x06, 0x42, 0x26, 0x4c, 0x73, 0x99, 0x85, 0x5d, 0x53, 0x1d, 0xc6, 0xbb,
	0x9c, 0xce, 0x60, 0x74, 0xc9, 0x33, 0x56, 0x94, 0xbb, 0x6e, 0x02, 0xbd, 0x94, 0x69, 0xe6, 0xfa,
	0x83, 0xd8, 0xc5, 0xb6, 0xa6, 0xf8, 0x37, 0x74, 0xdd, 0x5e, 0xec, 0x62, 0x72, 0x0e, 0xd7, 0x12,
	0x99, 0x69, 0xcc, 0xf4, 0xc7, 0x32, 0xc7, 0xd0, 0x73, 0xc4, 0xcd, 0x12, 0x9d, 0xc0, 0x8d, 0xa9,
	0xc2, 0xe2, 0x2d, 0x53, 0x96, 0x5c, 0x59, 0xd9, 0xa7, 0xe0, 0x2d, 0xb7, 0xda, 0x86, 0xb1, 0x0d,
	0xc9, 0x13, 0xb8, 0x89, 0x9b, 0x44, 0x2c, 0x53, 0x7c, 0xc9, 0x34, 0x7e, 0x91, 0x05, 0x47, 0x65,
	0xe6, 0x78, 0x06, 0xff, 0x15, 0xa0, 0x17, 0x70, 0x7a, 0x48, 0x69, 0x04, 0xdf, 0x07, 0x70, 0xf6,
	0xbc, 0xde, 0x70, 0xa5, 0x1d, 0xf5, 0x20, 0x6e, 0x54, 0xe8, 0xf7, 0x0e, 0x5c, 0x9f, 0xe6, 0x42,
	0xb2, 0xb4, 0x36, 0xef, 0x36, 0xf4, 0xe7, 0xa5, 0x36, 0x73, 0xaa, 0x37, 0x56, 0x89, 0xb5, 0xc9,
	0x76, 0xbd, 0x63, 0x0b, 0xac, 0x6d, 0xaa, 0xf3, 0x5a, 0xb7, 0xb7, 0xd7, 0x7d, 0x06, 0x43, 0x96,
	0x2e, 0x78, 0xf6, 0x3e, 0x13, 0x65, 0xd8, 0x73, 0x43, 0xf7, 0x05, 0x12, 0x82, 0x9f, 0x17, 0x7c,
	0x65, 0x84, 0x87, 0x7d, 0x87, 0xd5, 0xa9, 0x9d, 0x92, 0x54, 0xef, 0x29, 0xc3, 0x93, 0x6a, 0x4a,
	0x9d, 0xd3, 0x17, 0x30, 0x6a, 0x0a, 0xfd, 0xbf, 0x55, 0x5e, 0xfc, 0xe8, 0x42, 0xf0, 0x01, 0x8b,
	0x15, 0x4f, 0xd0, 0x99, 0x43, 0xae, 0xc0, 0x7f, 0x83, 0xda, 0xc6, 0xe4, 0x2c, 0x6a, 0xb9, 0xa7,
	0x68, 0xeb, 0xc7, 0xf8, 0xde, 0x1f, 0x50, 0x23, 0x62, 0x02, 0xc1, 0x2b, 0xb9, 0xce, 0x6a, 0x61,
	0x7f, 0x21, 0x7b, 0xd0, 0x8a, 0x1e, 0x1d, 0xd9, 0x27, 0x08, 0x9a, 0x7b, 0x24, 0x0f, 0x5b, 0x9b,
	0x8e, 0xae, 0x67, 0xfc, 0xe8, 0x1f, 0xfe, 0x65, 0xc8, 0xa7, 0x00, 0x7b, 0x1b, 0x09, 0x6d, 0x6f,
	0x6a, 0x1e, 0xc4, 0x6f, 0x34, 0x1f, 0xee, 0xe2, 0xd2, 0x9f, 0xf5, 0x5d, 0x7d, 0x7e, 0xe2, 0x3e,
	0xd1, 0x67, 0x3f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x8e, 0x4c, 0x83, 0x63, 0xbb, 0x03, 0x00, 0x00,
}
